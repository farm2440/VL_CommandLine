//*****************************************************************************
//*****************************************************************************
//  FILENAME: CNT_10kHz.h
//   Version: 2.60, Updated on 2013/5/19 at 10:42:36
//  Generated by PSoC Designer 5.4.2946
//
//  DESCRIPTION: Counter8 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2013. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef CNT_10kHz_INCLUDE
#define CNT_10kHz_INCLUDE

#include <m8c.h>

#pragma fastcall16 CNT_10kHz_EnableInt
#pragma fastcall16 CNT_10kHz_DisableInt
#pragma fastcall16 CNT_10kHz_Start
#pragma fastcall16 CNT_10kHz_Stop
#pragma fastcall16 CNT_10kHz_bReadCounter              // Read  DR0
#pragma fastcall16 CNT_10kHz_WritePeriod               // Write DR1
#pragma fastcall16 CNT_10kHz_bReadCompareValue         // Read  DR2
#pragma fastcall16 CNT_10kHz_WriteCompareValue         // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 bCNT_10kHz_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 bCNT_10kHz_ReadCompareValue         // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the CNT_10kHz API.
//-------------------------------------------------

extern void CNT_10kHz_EnableInt(void);                           // Proxy Class 1
extern void CNT_10kHz_DisableInt(void);                          // Proxy Class 1
extern void CNT_10kHz_Start(void);                               // Proxy Class 1
extern void CNT_10kHz_Stop(void);                                // Proxy Class 1
extern BYTE CNT_10kHz_bReadCounter(void);                        // Proxy Class 1
extern void CNT_10kHz_WritePeriod(BYTE bPeriod);                 // Proxy Class 1
extern BYTE CNT_10kHz_bReadCompareValue(void);                   // Proxy Class 2
extern void CNT_10kHz_WriteCompareValue(BYTE bCompareValue);     // Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern BYTE bCNT_10kHz_ReadCounter(void);            // Deprecated
extern BYTE bCNT_10kHz_ReadCompareValue(void);       // Deprecated


//--------------------------------------------------
// Constants for CNT_10kHz API's.
//--------------------------------------------------

#define CNT_10kHz_CONTROL_REG_START_BIT        ( 0x01 )
#define CNT_10kHz_INT_REG_ADDR                 ( 0x0e1 )
#define CNT_10kHz_INT_MASK                     ( 0x02 )


//--------------------------------------------------
// Constants for CNT_10kHz user defined values
//--------------------------------------------------

#define CNT_10kHz_PERIOD                       ( 0x64 )
#define CNT_10kHz_COMPARE_VALUE                ( 0x32 )


//-------------------------------------------------
// Register Addresses for CNT_10kHz
//-------------------------------------------------

#pragma ioport  CNT_10kHz_COUNTER_REG:  0x024              //DR0 Count register
BYTE            CNT_10kHz_COUNTER_REG;
#pragma ioport  CNT_10kHz_PERIOD_REG:   0x025              //DR1 Period register
BYTE            CNT_10kHz_PERIOD_REG;
#pragma ioport  CNT_10kHz_COMPARE_REG:  0x026              //DR2 Compare register
BYTE            CNT_10kHz_COMPARE_REG;
#pragma ioport  CNT_10kHz_CONTROL_REG:  0x027              //Control register
BYTE            CNT_10kHz_CONTROL_REG;
#pragma ioport  CNT_10kHz_FUNC_REG: 0x124                  //Function register
BYTE            CNT_10kHz_FUNC_REG;
#pragma ioport  CNT_10kHz_INPUT_REG:    0x125              //Input register
BYTE            CNT_10kHz_INPUT_REG;
#pragma ioport  CNT_10kHz_OUTPUT_REG:   0x126              //Output register
BYTE            CNT_10kHz_OUTPUT_REG;
#pragma ioport  CNT_10kHz_INT_REG:       0x0e1             //Interrupt Mask Register
BYTE            CNT_10kHz_INT_REG;


//-------------------------------------------------
// CNT_10kHz Macro 'Functions'
//-------------------------------------------------

#define CNT_10kHz_Start_M \
   CNT_10kHz_CONTROL_REG |=  CNT_10kHz_CONTROL_REG_START_BIT

#define CNT_10kHz_Stop_M  \
   CNT_10kHz_CONTROL_REG &= ~CNT_10kHz_CONTROL_REG_START_BIT

#define CNT_10kHz_EnableInt_M   \
   M8C_EnableIntMask(CNT_10kHz_INT_REG, CNT_10kHz_INT_MASK)

#define CNT_10kHz_DisableInt_M  \
   M8C_DisableIntMask(CNT_10kHz_INT_REG, CNT_10kHz_INT_MASK)

#endif
// end of file CNT_10kHz.h
