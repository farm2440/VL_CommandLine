//*****************************************************************************
//*****************************************************************************
//  FILENAME: PWM_SRV.h
//   Version: 2.60, Updated on 2013/5/19 at 10:44:7
//  Generated by PSoC Designer 5.4.2946
//
//  DESCRIPTION: PWM8 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2013. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef PWM_SRV_INCLUDE
#define PWM_SRV_INCLUDE

#include <m8c.h>

#pragma fastcall16 PWM_SRV_EnableInt
#pragma fastcall16 PWM_SRV_DisableInt
#pragma fastcall16 PWM_SRV_Start
#pragma fastcall16 PWM_SRV_Stop
#pragma fastcall16 PWM_SRV_bReadCounter              // Read  DR0
#pragma fastcall16 PWM_SRV_WritePeriod               // Write DR1
#pragma fastcall16 PWM_SRV_bReadPulseWidth           // Read  DR2
#pragma fastcall16 PWM_SRV_WritePulseWidth           // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 bPWM_SRV_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 bPWM_SRV_ReadPulseWidth           // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the PWM_SRV API.
//-------------------------------------------------

extern void PWM_SRV_EnableInt(void);                        // Proxy Class 1
extern void PWM_SRV_DisableInt(void);                       // Proxy Class 1
extern void PWM_SRV_Start(void);                            // Proxy Class 1
extern void PWM_SRV_Stop(void);                             // Proxy Class 1
extern BYTE PWM_SRV_bReadCounter(void);                     // Proxy Class 2
extern void PWM_SRV_WritePeriod(BYTE bPeriod);              // Proxy Class 1
extern BYTE PWM_SRV_bReadPulseWidth(void);                  // Proxy Class 1
extern void PWM_SRV_WritePulseWidth(BYTE bPulseWidth);      // Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern BYTE bPWM_SRV_ReadCounter(void);            // Deprecated
extern BYTE bPWM_SRV_ReadPulseWidth(void);         // Deprecated


//--------------------------------------------------
// Constants for PWM_SRV API's.
//--------------------------------------------------

#define PWM_SRV_CONTROL_REG_START_BIT          ( 0x01 )
#define PWM_SRV_INT_REG_ADDR                   ( 0x0e1 )
#define PWM_SRV_INT_MASK                       ( 0x01 )


//--------------------------------------------------
// Constants for PWM_SRV user defined values
//--------------------------------------------------

#define PWM_SRV_PERIOD                         ( 0xc8 )
#define PWM_SRV_PULSE_WIDTH                    ( 0x0f )


//-------------------------------------------------
// Register Addresses for PWM_SRV
//-------------------------------------------------

#pragma ioport  PWM_SRV_COUNTER_REG:    0x020              //DR0 Count register
BYTE            PWM_SRV_COUNTER_REG;
#pragma ioport  PWM_SRV_PERIOD_REG: 0x021                  //DR1 Period register
BYTE            PWM_SRV_PERIOD_REG;
#pragma ioport  PWM_SRV_COMPARE_REG:    0x022              //DR2 Compare register
BYTE            PWM_SRV_COMPARE_REG;
#pragma ioport  PWM_SRV_CONTROL_REG:    0x023              //Control register
BYTE            PWM_SRV_CONTROL_REG;
#pragma ioport  PWM_SRV_FUNC_REG:   0x120                  //Function register
BYTE            PWM_SRV_FUNC_REG;
#pragma ioport  PWM_SRV_INPUT_REG:  0x121                  //Input register
BYTE            PWM_SRV_INPUT_REG;
#pragma ioport  PWM_SRV_OUTPUT_REG: 0x122                  //Output register
BYTE            PWM_SRV_OUTPUT_REG;
#pragma ioport  PWM_SRV_INT_REG:       0x0e1               //Interrupt Mask Register
BYTE            PWM_SRV_INT_REG;


//-------------------------------------------------
// PWM_SRV Macro 'Functions'
//-------------------------------------------------

#define PWM_SRV_Start_M \
   PWM_SRV_CONTROL_REG |=  PWM_SRV_CONTROL_REG_START_BIT

#define PWM_SRV_Stop_M  \
   PWM_SRV_CONTROL_REG &= ~PWM_SRV_CONTROL_REG_START_BIT

#define PWM_SRV_EnableInt_M   \
   M8C_EnableIntMask(PWM_SRV_INT_REG, PWM_SRV_INT_MASK)

#define PWM_SRV_DisableInt_M  \
   M8C_DisableIntMask(PWM_SRV_INT_REG, PWM_SRV_INT_MASK)

#endif
// end of file PWM_SRV.h
